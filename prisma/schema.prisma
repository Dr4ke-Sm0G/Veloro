// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Brand {
  id     String  @id @default(cuid())
  name   String  @unique
  logo   String?
  models Model[]
}

model Model {
  id       String   @id @default(cuid())
  name     String
  brand    Brand    @relation(fields: [brandId], references: [id])
  brandId  String
  variants Variant[]

  @@unique([name, brandId])
}

model Variant {
  id       String   @id @default(cuid())
  name     String
  model    Model    @relation(fields: [modelId], references: [id])
  modelId  String

  year       Int?
  bodyType   String?
  drive      String?   // e.g. "FWD", "RWD", "AWD"

  /// 1‑to‑1 spec relations
  batterySpec        BatterySpec?
  chargingSpec       ChargingSpec?
  performanceSpec    PerformanceSpec?
  efficiencySpec     EfficiencySpec?
  realConsumption    RealConsumptionSpec?
  dimensionSpec      DimensionSpec?
  safetyRating       SafetyRating?
  v2xSpec            V2XSpec?
  availability       Availability?

  /// 1‑to‑N relations
  prices             Price[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, modelId, year])
}

/// ---------------------------------
/// Commercial data
/// ---------------------------------

model Price {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String

  country   String   // ISO country name ("Germany")
  price     Decimal
  validFrom DateTime?
  validTo   DateTime?

  @@index([variantId, country])
}

model Availability {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  availableFrom DateTime?
  availableTo   DateTime?
}

/// ---------------------------------
/// Technical specification blocks (1‑to‑1 with Variant)
/// ---------------------------------

model BatterySpec {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  nominalCapacity      Decimal? // kWh
  useableCapacity      Decimal? // kWh
  batteryType          String?
  architecture         String?  // "400 V" / "800 V"
  cathodeMaterial      String?
  packConfiguration    String?
  nominalVoltage       Decimal?
  formFactor           String?
  warrantyPeriod       String?
  warrantyMileage      String?
}

model ChargingSpec {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  acPortType              String?
  acPowerKW               Decimal?
  acChargeTime            String? // formatted string "9h45m"
  acChargeSpeedKmH        Int?

  dcPortType              String?
  dcMaxPowerKW            Decimal?
  dcPower10to80KW         Decimal?
  dcChargeSpeedKmH        Int?

  portLocation            String?
  autochargeSupported     Boolean?
  plugAndChargeSupported  Boolean?
  iso15118Supported       Boolean?
  preconditioningPossible Boolean?
  preconditioningNav      Boolean?
}

model PerformanceSpec {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  acceleration0100Sec  Decimal?
  topSpeedKmh          Int?
  electricRangeKm      Int?
  totalPowerKw         Decimal?
  totalTorqueNm        Decimal?
  drive                String?
}

model EfficiencySpec {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  rangeKm                  Int?
  vehicleConsumptionWhKm   Int?
  ratedConsumptionWhKm     Int?
  vehicleFuelEqL100km      Decimal?
  ratedFuelEqL100km        Decimal?
  co2EmissionsGKm          Int?
}

model RealConsumptionSpec {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  cityColdWhKm        Int?
  highwayColdWhKm     Int?
  combinedColdWhKm    Int?
  cityMildWhKm        Int?
  highwayMildWhKm     Int?
  combinedMildWhKm    Int?
}

model DimensionSpec {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  lengthMm             Int?
  widthMm              Int?
  widthWithMirrorsMm   Int?
  heightMm             Int?
  wheelbaseMm          Int?
  weightUnladenKg      Int?
  grossVehicleWeightKg Int?
  maxPayloadKg         Int?

  cargoVolumeL         Int?
  cargoVolumeMaxL      Int?
  frunkVolumeL         Int?

  roofLoadKg           Int?
  towHitchPossible     Boolean?
  towingWeightUnbrakedKg Int?
  towingWeightBrakedKg   Int?
  verticalLoadMaxKg    Int?

  seats                Int?
  isofix               Boolean?
  turningCircleM       Decimal?

  platform             String?
  evDedicatedPlatform  Boolean?
  carBody              String?
  segment              String?
  roofRails            Boolean?
  heatPump             Boolean?
}

model SafetyRating {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  ratingYear             Int?
  adultOccupantPercent   Int?
  childOccupantPercent   Int?
  vulnerableRoadUsersPct Int?
  safetyAssistPercent    Int?
}

model V2XSpec {
  id        String   @id @default(cuid())
  variant   Variant  @relation(fields: [variantId], references: [id])
  variantId String   @unique

  v2lSupported      Boolean?
  exteriorOutlet    String?
  interiorOutlet    String?
  v2hAcSupported    Boolean?
  v2hDcSupported    Boolean?
  v2gAcSupported    Boolean?
  v2gDcSupported    Boolean?
}
